generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid()) @db.Uuid
  email         String         @unique @db.VarChar(255)
  password      String
  firstName     String         @map("first_name")
  lastName      String         @map("last_name")
  phone         String
  geolocation   Geolocation?
  about         String?
  avatars       Avatar[]
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")

  @@map("users")
}

model Geolocation {
  id        String   @id @default(uuid()) @db.Uuid
  lat       Float
  lng       Float
  userId    String   @unique @map("user_id") @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("geolocations")
}

model Avatar {
  id        String   @id @default(uuid()) @db.Uuid
  path      String   @unique
  userId    String   @map("user_id") @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("avatars")
}

model RefreshToken {
  id     String @id @default(uuid()) @db.Uuid
  token  String @unique
  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")

  @@map("refresh_tokens")
}
